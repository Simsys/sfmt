mod macros;

#[test]
fn uxx() {
    cmp!("{}", 0u8);
    cmp!("{}", 10u8);
    cmp!("{}", 100u8);

    // extreme values
    cmp!("{}", u8::max_value());
    cmp!("{}", u16::max_value());
    cmp!("{}", u32::max_value());
    cmp!("{}", u64::max_value());
    cmp!("{}", u128::max_value());
    cmp!("{}", usize::max_value());

    cmp!("{:10}", 235_u8);
    cmp!("{:10}", 235_u16);
    cmp!("{:10}", 235_u32);
    cmp!("{:10}", 235_u64);
    cmp!("{:10}", 235_u128);
    cmp!("{:10}", 235_usize);

    cmp!("{:<10}", 235_u8);
    cmp!("{:<10}", 235_u16);
    cmp!("{:<10}", 235_u32);
    cmp!("{:<10}", 235_u64);
    cmp!("{:<10}", 235_u128);
    cmp!("{:<10}", 235_usize);

    cmp!("{:>10}", 235_u8);
    cmp!("{:>10}", 235_u16);
    cmp!("{:>10}", 235_u32);
    cmp!("{:>10}", 235_u64);
    cmp!("{:>10}", 235_u128);
    cmp!("{:>10}", 235_usize);

    cmp!("{:0>10}", 235_u8);
    cmp!("{:0<10}", 235_u16);
    cmp!("{:0^10}", 235_u32);
    cmp!("{:0>10}", 235_u64);
    cmp!("{:0<10}", 235_u128);
    cmp!("{:0^10}", 235_usize);
}

#[test]
fn ixx() {
    // sanity check
    cmp!("{}", 0i8);
    cmp!("{}", 10i8);
    cmp!("{}", 100i8);

    // extreme values
    cmp!("{}", i8::min_value());
    cmp!("{}", i8::max_value());
    cmp!("{}", i16::min_value());
    cmp!("{}", i16::max_value());
    cmp!("{}", i32::min_value());
    cmp!("{}", i32::max_value());
    cmp!("{}", i64::min_value());
    cmp!("{}", i64::max_value());
    cmp!("{}", i128::min_value());
    cmp!("{}", i128::max_value());
    cmp!("{}", isize::min_value());
    cmp!("{}", isize::max_value());

    cmp!("{:10}", -115_i8);
    cmp!("{:10}", -115_i16);
    cmp!("{:10}", -115_i32);
    cmp!("{:10}", -115_i64);
    cmp!("{:10}", -115_i128);
    cmp!("{:10}", -115_isize);

    cmp!("{:<10}", -115_i8);
    cmp!("{:<10}", -115_i16);
    cmp!("{:<10}", -115_i32);
    cmp!("{:<10}", -115_i64);
    cmp!("{:<10}", -115_i128);
    cmp!("{:<10}", -115_isize);

    cmp!("{:>10}", -115_i8);
    cmp!("{:>10}", -115_i16);
    cmp!("{:>10}", -115_i32);
    cmp!("{:>10}", -115_i64);
    cmp!("{:>10}", -115_i128);
    cmp!("{:>10}", -115_isize);

    cmp!("{:0>10}", -115_i8);
    cmp!("{:0<10}", -115_i16);
    cmp!("{:0^10}", -115_i32);
    cmp!("{:0>10}", -115_i64);
    cmp!("{:0<10}", -115_i128);
    cmp!("{:0^10}", -115_isize);
}
